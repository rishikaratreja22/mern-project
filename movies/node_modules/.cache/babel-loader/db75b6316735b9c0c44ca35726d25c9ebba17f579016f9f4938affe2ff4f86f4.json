{"ast":null,"code":"// import axios from 'axios';\n\n// export const getAllMovies = async() => {\n//     const res = await axios.get(\"http://localhost:5000/movie\").catch((err) => console.log(err));\n//     console.log(\"Response recevied\", res);\n\n//     if(res.status !== 200){\n//         return console.log(\"No Data\");\n//     }\n\n//     const data = await res.data;\n//     return data;\n// } \n// import axios from 'axios';\n\n// export const getAllMovies = async () => {\n//     try {\n//         console.log('Starting request to fetch movies...');\n\n//         const res = await axios.get(\"http://localhost:5000/movie/\");\n\n//         console.log('Response received:', res);\n\n//         // Check if status code is 200\n//         if (res.status !== 200) {\n//             console.error(`Unexpected status code: ${res.status}`);\n//             return \"No Data\"; // Return or handle data as needed\n//         }\n\n//         // Log the response data\n//         console.log('Response data:', res.data);\n\n//         // Return the data\n//         return res.data;\n//     } catch (err) {\n//         // Log the error details\n//         console.error('Error occurred while fetching movies:', err);\n//         // Optionally rethrow the error or handle it as appropriate\n//         throw err; // or return a specific value or message\n//     }\n// };\n\nimport axios from 'axios';\nexport const getAllMovies = async () => {\n  try {\n    console.log('Starting request to fetch movies...');\n    const res = await axios.get(\"http://localhost:5000/movie\");\n    console.log('Response received:', res);\n    if (res.status !== 200) {\n      console.error(`Unexpected status code: ${res.status}`);\n      return \"No Data\";\n    }\n    console.log('Response data:', res.data);\n    return res.data;\n  } catch (err) {\n    // Log detailed error information\n    console.error('Error occurred while fetching movies:', err.message);\n    if (err.response) {\n      console.error('Error response:', err.response);\n    } else if (err.request) {\n      console.error('Error request:', err.request);\n    } else {\n      console.error('Error message:', err.message);\n    }\n    throw err; // Optionally rethrow the error\n  }\n};","map":{"version":3,"names":["axios","getAllMovies","console","log","res","get","status","error","data","err","message","response","request"],"sources":["C:/Users/rishi/Dropbox/Web-development/project-React/moviebooking-mern/movies/src/api-helpers/api-helpers.js"],"sourcesContent":["// import axios from 'axios';\r\n\r\n// export const getAllMovies = async() => {\r\n//     const res = await axios.get(\"http://localhost:5000/movie\").catch((err) => console.log(err));\r\n//     console.log(\"Response recevied\", res);\r\n\r\n//     if(res.status !== 200){\r\n//         return console.log(\"No Data\");\r\n//     }\r\n\r\n//     const data = await res.data;\r\n//     return data;\r\n// } \r\n// import axios from 'axios';\r\n\r\n// export const getAllMovies = async () => {\r\n//     try {\r\n//         console.log('Starting request to fetch movies...');\r\n        \r\n//         const res = await axios.get(\"http://localhost:5000/movie/\");\r\n        \r\n//         console.log('Response received:', res);\r\n\r\n//         // Check if status code is 200\r\n//         if (res.status !== 200) {\r\n//             console.error(`Unexpected status code: ${res.status}`);\r\n//             return \"No Data\"; // Return or handle data as needed\r\n//         }\r\n\r\n//         // Log the response data\r\n//         console.log('Response data:', res.data);\r\n\r\n//         // Return the data\r\n//         return res.data;\r\n//     } catch (err) {\r\n//         // Log the error details\r\n//         console.error('Error occurred while fetching movies:', err);\r\n//         // Optionally rethrow the error or handle it as appropriate\r\n//         throw err; // or return a specific value or message\r\n//     }\r\n// };\r\n\r\nimport axios from 'axios';\r\n\r\nexport const getAllMovies = async () => {\r\n    try {\r\n        console.log('Starting request to fetch movies...');\r\n        \r\n        const res = await axios.get(\"http://localhost:5000/movie\");\r\n        \r\n        console.log('Response received:', res);\r\n\r\n        if (res.status !== 200) {\r\n            console.error(`Unexpected status code: ${res.status}`);\r\n            return \"No Data\";\r\n        }\r\n\r\n        console.log('Response data:', res.data);\r\n        return res.data;\r\n    } catch (err) {\r\n        // Log detailed error information\r\n        console.error('Error occurred while fetching movies:', err.message);\r\n        if (err.response) {\r\n            console.error('Error response:', err.response);\r\n        } else if (err.request) {\r\n            console.error('Error request:', err.request);\r\n        } else {\r\n            console.error('Error message:', err.message);\r\n        }\r\n        throw err; // Optionally rethrow the error\r\n    }\r\n};\r\n\r\n\r\n \r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACAC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAElD,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,6BAA6B,CAAC;IAE1DH,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,GAAG,CAAC;IAEtC,IAAIA,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;MACpBJ,OAAO,CAACK,KAAK,CAAC,2BAA2BH,GAAG,CAACE,MAAM,EAAE,CAAC;MACtD,OAAO,SAAS;IACpB;IAEAJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,GAAG,CAACI,IAAI,CAAC;IACvC,OAAOJ,GAAG,CAACI,IAAI;EACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACV;IACAP,OAAO,CAACK,KAAK,CAAC,uCAAuC,EAAEE,GAAG,CAACC,OAAO,CAAC;IACnE,IAAID,GAAG,CAACE,QAAQ,EAAE;MACdT,OAAO,CAACK,KAAK,CAAC,iBAAiB,EAAEE,GAAG,CAACE,QAAQ,CAAC;IAClD,CAAC,MAAM,IAAIF,GAAG,CAACG,OAAO,EAAE;MACpBV,OAAO,CAACK,KAAK,CAAC,gBAAgB,EAAEE,GAAG,CAACG,OAAO,CAAC;IAChD,CAAC,MAAM;MACHV,OAAO,CAACK,KAAK,CAAC,gBAAgB,EAAEE,GAAG,CAACC,OAAO,CAAC;IAChD;IACA,MAAMD,GAAG,CAAC,CAAC;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}